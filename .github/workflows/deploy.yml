name: Build and Deploy MCP Server

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    env:
      PYTHON_VERSION: "3.9"
      SQLITE_DB_PATH: "data/database.db"
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Install SQLite Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y sqlite3
          
      - name: Setup Database
        run: |
          mkdir -p data
          sqlite3 $SQLITE_DB_PATH ".databases"
          
      - name: Run Tests
        run: |
          pytest tests/ --database-url="sqlite:///$SQLITE_DB_PATH"
          
      - name: Build Docker Image
        run: |
          docker build -t mcp-coder .
          
      - name: Security Scan
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Build and Push Docker Image
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build -t mcp-coder:${GITHUB_SHA::7} .
          docker tag mcp-coder:${GITHUB_SHA::7} mcp-coder:latest
          docker push mcp-coder:${GITHUB_SHA::7}
          docker push mcp-coder:latest

      - name: Deploy to Production
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
          DEPLOY_URL: ${{ secrets.DEPLOY_URL }}
        run: |
          curl -X POST $DEPLOY_URL \
            -H "Authorization: Bearer $DEPLOY_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"version": "'${GITHUB_SHA::7}'"}'
